# 99a769f533440a3abe86c6a1796cb08980f4cab3d9bdcce4b792f58866e827de
# Dockerfile generated by Maru 0.1.1

# Staged build using builder container
FROM scientificlinux/sl:7 as builder
ARG GIT_TAG=dev

RUN yum install -y git curl openssh gcc
RUN yum install -y unzip
RUN yum install -y make
RUN yum install -y gcc-c++

# for building R
RUN yum install -y gcc-gfortran
RUN yum install -y zlib-devel bzip2-devel xz-devel
RUN yum install -y pcre pcre-devel
RUN yum install -y libcurl-devel

# for building samtools
RUN yum install -y ncurses-devel

# Checkout and build the code
WORKDIR /app
RUN git clone --branch $GIT_TAG --depth 1 https://github.com/YourePrettyGood/msg .

WORKDIR /app/dependencies
RUN curl -sO https://www.python.org/ftp/python/2.6.6/Python-2.6.6.tgz
RUN curl -sO https://cran.r-project.org/src/base/R-3/R-3.4.0.tar.gz
RUN cat *.{tar.gz,tgz} | tar zxvf - -i \
    && cat *.tar.bz2 | tar jxvf - -i \
    && unzip *.zip

WORKDIR /app/dependencies/Python-2.6.6
RUN ./configure && make && make install

WORKDIR /app/dependencies/R-3.4.0
RUN ./configure --with-readline=no --with-x=no F77=gfortran \
    && make && make install

WORKDIR /app/dependencies/bwa-0.5.7
RUN make && cp ./bwa /usr/local/bin





WORKDIR /app
RUN make && make samtools && make stampy



# test script, will be removed
COPY testscript.sh /app



# in final form, we'll remove these
# RUN rm -rf /app/dependencies




# Create final image
FROM scientificlinux/sl:7

COPY --from=builder / /



# Add Tini
# ENV TINI_VERSION v0.19.0
# ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
# RUN chmod +x /tini
# ENTRYPOINT ["/tini", "--"]

# Run your program under Tini
# CMD ["/your/program", "-and", "-its", "arguments"]




# for testing; this runs the test_dependencies.sh script
ENTRYPOINT ["/bin/sh", "/app/testscript.sh"]
